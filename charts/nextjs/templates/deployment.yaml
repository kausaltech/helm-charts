apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nextjs-helm.fullname" . }}
  labels:
    {{- include "nextjs-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nextjs-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/env-configmap: {{ include (print $.Template.BasePath "/env-configmap.yaml") . | sha256sum }}
        checksum/env-secrets: {{ include (print $.Template.BasePath "/env-secrets.yaml") . | sha256sum }}
      labels:
        {{- include "nextjs-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nextjs-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: [{{ .Values.command | quote }}]
          {{- end }}
          {{- if .Values.args }}
          args:
          {{- range .Values.args }}
            - {{ . | quote }}
          {{- end }}
          {{- end }}
          {{- include "nextjs-helm.envVariables" . | nindent 10 }}
          ports:
            - name: nextjs
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: nextjs
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.path }}
              port: nextjs
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.staticProxy.enabled }}
        - name: proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [{{ .Values.staticProxy.command | quote }}]
          {{- if .Values.staticProxy.args }}
          args:
          {{- range .Values.staticProxy.args }}
            - {{ . | quote }}
          {{- end }}
          {{- end }}
          {{- include "nextjs-helm.envVariables" . | nindent 10 }}
          ports:
            - name: proxy
              containerPort: {{ .Values.staticProxy.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_caddyhealth
              port: proxy
          readinessProbe:
            httpGet:
              path: /_caddyhealth
              port: proxy
          resources:
            {{- toYaml (.Values.staticProxy.resources | default .Values.resources) | nindent 12 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
